services:
  web:
    build: .
    command: [ "python", "manage.py", "runserver", "0.0.0.0:8000" ]
    env_file:
      - .env
    environment:
      - MICROSOFT_AUTH_CLIENT_ID=${MICROSOFT_AUTH_CLIENT_ID}
      - MICROSOFT_AUTH_CLIENT_SECRET=${MICROSOFT_AUTH_CLIENT_SECRET}
      - MICROSOFT_AUTH_TENANT_ID=${MICROSOFT_AUTH_TENANT_ID}
      - MICROSOFT_AUTH_OBJECT_ID=${MICROSOFT_AUTH_OBJECT_ID}
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - ttex-network
  celery:
    build: .
    command: [ "celery", "-A", "ttex", "worker", "-l", "info", "-E", "--max-tasks-per-child=1", "--max-memory-per-child=100000"]
    env_file:
      - .env
    environment:
      - MICROSOFT_AUTH_CLIENT_ID=${MICROSOFT_AUTH_CLIENT_ID}
      - MICROSOFT_AUTH_CLIENT_SECRET=${MICROSOFT_AUTH_CLIENT_SECRET}
      - MICROSOFT_AUTH_TENANT_ID=${MICROSOFT_AUTH_TENANT_ID}
      - MICROSOFT_AUTH_OBJECT_ID=${MICROSOFT_AUTH_OBJECT_ID}
      - NOTIFICATION_URL=${NOTIFICATION_URL}
      - MODEL_SIZE=${MODEL_SIZE}
    volumes:
      - .:/code
    depends_on:
      - db
    networks:
      - ttex-network
  db:
    image: postgres:16.2
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_NAME=${POSTGRES_NAME}
    networks:
      - ttex-network
  redis:
    image: redis:alpine
    networks:
      - ttex-network
networks:
  ttex-network:
    driver: bridge
